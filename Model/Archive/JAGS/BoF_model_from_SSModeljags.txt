model
{
    K ~ dlnorm(logK.a, logK.b) T(100, 10000)
    for (t in 1:NY) {
        r[t] ~ dlnorm(r.a, r.b)
    }
    for (t in 1:NY) {
        m[t] ~ dlnorm(m.a, m.b)
    }
    S ~ dunif(S.a, S.b)
    q ~ dbeta(q.a, q.b)
    sigma ~ dunif(sigma.a, sigma.b)
    isigma2 <- pow(sigma, -2)
    kappa.tau ~ dunif(kappa.tau.a, kappa.tau.b)
    ikappa.tau2 <- pow(kappa.tau, -2)
    for (t in 1:NY) {
        I.var[t] <- 2 * log(pow(I.cv[t], 2) + 1)
        I.precision[t] ~ dgamma(3, I.var[t])
        I.vsam[t] <- pow(I.precision[t], -0.5)
        IR.var[t] <- 2 * log(pow(IR.cv[t], 2) + 1)
        IR.precision[t] ~ dgamma(3, IR.var[t])
        IR.vsam[t] <- pow(IR.precision[t], -0.5)
    }
    Pmed[1] <- -pow(sigma, 2)/2
    P[1] ~ dlnorm(Pmed[1], isigma2) T(0, 8)
    for (t in 2:NY) {
        Pmed[t] <- log(max(exp(-m[t]) * g[t - 1] * (P[t - 1] - 
            C[t - 1]/K) + exp(-m[t]) * gR[t - 1] * r[t - 1], 
            0.001))
        P[t] ~ dlnorm(Pmed[t], isigma2) 
    }
    Cmed[1] <- log(m[1] * S * N[1])
    for (t in 2:NY) {
        Cmed[t] <- log(m[t] * S * (S * N[t - 1] + (2 - S) * N[t])/2)
    }
    for (t in 1:NY) {
        clappers[t] ~ dlnorm(Cmed[t], ikappa.tau2)
    }
    for (t in 1:NY) {
        Imed[t] <- log(q * K * P[t])
        I[t] ~ dlnorm(Imed[t], I.precision[t])
        IRmed[t] <- log(ratiolined[t] * q * K * r[t])
        IR[t] ~ dlnorm(IRmed[t], IR.precision[t])
        Ipred[t] <- q * B[t]
        IRpred[t] <- ratiolined[t] * q * R[t]
        Irep[t] ~ dlnorm(Imed[t], I.precision[t])
        IRrep[t] ~ dlnorm(IRmed[t], IR.precision[t])
    }
    for (t in 1:NY) {
        B[t] <- P[t] * K
        R[t] <- r[t] * K
    }
    for (t in 1:(NY - 1)) {
        mu[t] <- C[t]/(B[t + 1] + C[t])
        Fmort[t] <- -log(max(1 - mu[t], 1e-04))
    }
    for (t in 1:NY) {
        Iresid[t] <- log(I[t]) - Imed[t]
        Presid[t] <- log(P[t]) - Pmed[t]
        IRresid[t] <- log(IR[t]) - IRmed[t]
        sPresid[t] <- Presid[t] * 1/sigma
        sIresid[t] <- Iresid[t] * pow(I.precision[t], 0.5)
        sIRresid[t] <- IRresid[t] * pow(IR.precision[t], 0.5)
    }
}
